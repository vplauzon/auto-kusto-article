# YAML doc:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema

resources:
- repo: self

# Stages:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema#stage
stages:
- stage:  deploy_kusto
  displayName:  Deploy Kusto end-2-end
  # Variables:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema#variables
  variables: []
  # Those variables should be defined in the UI as they are specific to a given environment (e.g. cluster name)
  #   clusterName:  Name of Azure Data Explorer cluster
  #   serviceConnection:  Name of Azure DevOps connection used to ARM-deploy
  #   appId:  Client ID of the service principal used to interact with the cluster
  #   appSecret:  Secret of the service principal
  #   appTenantId:  Tenant ID of the service principal
  jobs:
  - job:  e2e_deploy
    pool:
      vmImage: 'ubuntu-latest'
    variables:  []
    steps:
    # Download Microsoft.Azure.Kusto.Tools.NETCore
    - bash:  |
        # Download from nuget.org
        nuget install Microsoft.Azure.Kusto.Tools.NETCore
        # Rename the folder (including the most recent version)
        mv Microsoft.Azure.Kusto.Tools.* kusto.tools
      displayName:  Download Kusto.Tools Nuget package
    # Install .NET core version compatible with Kusto tools
    - task: UseDotNet@2
      inputs:
        version: '2.1.0'
        packageType: runtime
    # Schema Entities
    # Run Kusto.CLI
    - bash:  ls -l
    - bash:  ls -l kusto.tools
    - bash:  ls -l kusto.tools/tools
    - bash:  |
        # Define the connection string to the cluster's database, including service principal's credentials
        connectionString="https://$(CLUSTERNAME).kusto.windows.net/myDatabase;Fed=true;AppClientId=$(appId);AppKey=$(appSecret);Authority Id=$(appTenantId)"
        # Execute a KQL script against the database
        cp kusto.tools/tools/Kusto.Cli.dll .
        dotnet Kusto.Cli.dll $connectionString -script MyDatabase.kql
      displayName:  Schema Entities
    # Infrastructure
    # ARM Template:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment
    - task: AzureResourceManagerTemplateDeployment@3
      displayName:  Infrastructure
      inputs:
        deploymentScope: 'Resource Group'
        # Here we don't specify the subscriptionId nor resourceGroupName
        # because they are already specified in our service connection
        azureResourceManagerConnection: $(serviceConnection)
        action: 'Create Or Update Resource Group'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: kusto-infra.json
        overrideParameters:  "-clusterName $(CLUSTERNAME)"
        deploymentMode: 'Incremental'
